name: Build Executable

on:
  push:
    branches: [main]
    paths:
      - "**.py"
      - "pyproject.toml"
      - ".github/workflows/**"

jobs:
  build:
    permissions:
      contents: write
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13.4"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest

      - name: Run Tests
        run: |
          pytest

      - name: Determine Next Version
        id: semver
        run: |
          git fetch --tags

          $latestTag = git tag --sort=-creatordate | Select-Object -First 1

          if (-not $latestTag) {
            $major = 1; $minor = 0; $patch = 0
          } else {
            $version = $latestTag.TrimStart('v')
            $parts = $version -split '\.'
            $major = [int]$parts[0]
            $minor = [int]$parts[1]
            $patch = [int]$parts[2]
          }

          $commitMessage = "${{ github.event.head_commit.message }}".Trim()

          if ($commitMessage -like "BREAKING:*" -or ($commitMessage -contains "major")) {
            $major++; $minor = 0; $patch = 0
          } elseif ($commitMessage -like "feat:*" -or ($commitMessage -contains "minor") -or ($commitMessage -contains "feature")) {
            $minor++; $patch = 0
          } else {
            $patch++
          }

          $newVersion = "$major.$minor.$patch"
          $newTag = "v$newVersion"

          Write-Host "New tag: $newTag"
          "version=$newVersion" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          "tag=$newTag" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

          exit 0

      - name: Build Executable
        run: |
          pyinstaller --onefile --windowed weather_helper.py

      - name: Package Executable
        run: |
          Compress-Archive -Path dist\weather_helper.exe -DestinationPath dist\weather_helper.zip

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Create Git Tag (if not exists)
        run: |
          $tag = "${{ steps.semver.outputs.tag }}"

          $tagExists = git tag --list $tag
          if (-not $tagExists) {
            git tag -a $tag -m "Release $tag"
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
            git push origin $tag
          } else {
            Write-Host "Tag $tag already exists. Skipping tag creation."
          }

      - name: Create GitHub Release and Upload Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.semver.outputs.tag }}
          name: Release ${{ steps.semver.outputs.tag }}
          body: |
            Release from commit #${{ github.event.head_commit.id }}
            ${{ github.event.head_commit.message }}

            This release includes:
            - Windows Executable
          files: dist/weather_helper.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
